name: PHP Vulnerability Scan (Windows Localhost)

on:
  push:
    paths:
      - '**.php'
  pull_request:
    paths:
      - '**.php'


jobs:
  scan:
    runs-on: self-hosted

    outputs:
      has_vulns: ${{ steps.scan.outputs.has_vulns }}
      vuln_summary: ${{ steps.scan.outputs.vuln_summary }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: scan
        name: Scan PHP files with local Go server
        shell: powershell
        run: |
          Write-Host "üîç Starting PHP vulnerability scan..."

          $hasVulns = $false
          $vulnPrintout = @()
          $outputPath = $env:GITHUB_OUTPUT

          $phpFiles = Get-ChildItem -Recurse -Filter *.php
          foreach ($file in $phpFiles) {
            Write-Host "üìÑ Scanning file: $($file.FullName)"

            $content = Get-Content $file.FullName -Raw
            $jsonBody = @{ contents = $content } | ConvertTo-Json -Compress

            try {
              $response = Invoke-RestMethod -Uri "http://localhost:3000/analyze" `
                                            -Method Post `
                                            -Body $jsonBody `
                                            -ContentType "application/json"
            }
            catch {
              Write-Error "‚ùó Failed to connect to vulnerability scanner at localhost."
              exit 1
            }

            if ($response.vulns.Count -gt 0) {
              $hasVulns = $true
              Write-Host "‚ùå Vulnerabilities found in $($file.FullName):"
              Write-Host "--------------------------------------------------"
              Write-Host $response.everything
              Write-Host "--------------------------------------------------"

              $vulnPrintout += "### ‚ùå $($file.FullName)`n``````text`n$response.everything`n``````"
            }
            else {
              Write-Host "‚úÖ No vulnerabilities found in $($file.FullName)"
            }
          }

          if ($hasVulns) {
            # Write vuln_summary to GITHUB_OUTPUT
            Add-Content -Path $outputPath -Value "vuln_summary<<EOF"
            $vulnPrintout -join "`n" | Add-Content -Path $outputPath
            Add-Content -Path $outputPath -Value "EOF"

            Add-Content -Path $outputPath -Value "has_vulns=true"
            exit 1
          }
          else {
            Write-Host "All PHP files are clean."
            Add-Content -Path $outputPath -Value 'has_vulns=false'
          }



  comment-and-label:
    needs: scan
    if: needs.scan.outputs.has_vulns == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Add PR Comment with Vulnerabilities
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## üö® Vulnerability Scan Failed
            The following issues were found in this PR:

            ${{ needs.scan.outputs.vuln_summary }}

            > Please address these vulnerabilities before merging.

      - name: Add 'security-failed' label to PR
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: security-failed
